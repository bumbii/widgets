name: Handle PR Merge

on:
  pull_request:
    types:
      - closed

jobs:
  handle-pr-merge:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true # Ensure that this workflow runs only on merged PRs

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get the source branch name
        id: get_branch_name
        run: echo "SOURCE_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV

      - name: Create directory if it does not exist
        run: |
          if [ ! -d "${{ env.SOURCE_BRANCH }}" ]; then
            mkdir -p "${{ env.SOURCE_BRANCH }}"
            echo "Directory created: ${{ env.SOURCE_BRANCH }}"
          else
            echo "Directory already exists: ${{ env.SOURCE_BRANCH }}"
          fi

      - name: Move to source branch directory
        run: |
          if [ -d "${{ env.SOURCE_BRANCH }}" ]; then
            cd "${{ env.SOURCE_BRANCH }}"
            echo "Current directory: $(pwd)"
          else
            echo "Directory does not exist: ${{ env.SOURCE_BRANCH }}"
            exit 1
          fi

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: 'stable'

      - name: Install dependencies
        run: dart pub get

      - name: Validate package
        run: dart pub publish --dry-run

      - name: Publish to pub.dev
        run: dart pub publish --force
        env:
          PUB_TOKEN: ${{ secrets.PUB_TOKEN }}
